#!/usr/bin/env node

/**
 * Module dependencies.
 */
const app = require('../app');
const { appPort, database } = require('../config');
const debug = require('debug')('tiny-project-backend:server');
const http = require('http');
const normalizePort = require('../src/utils/normalize-port');
const connect = require('../src/connect');

/**
 * Initialize database
 */
connect(database);

/**
 * Get port from environment and store in Express.
 */
const port = normalizePort(appPort);
app.set('port', port);

/**
 * Create HTTP server.
 */
var server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */
server.listen(port);

server.on('error', (error) => {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
});

server.on('listening', () => {
  var addr = server.address();
  var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
  debug('Listening on ' + bind);
});
